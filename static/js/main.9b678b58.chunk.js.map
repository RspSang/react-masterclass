{"version":3,"sources":["theme.ts","atoms.ts","api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx"],"names":["lightTheme","bgColor","textColor","accentColor","cardBgColor","borderColor","darkTheme","isDarkAtom","atom","key","default","BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinTickers","coinId","ChartBtn","styled","button","props","theme","Chart","isDark","useRecoilValue","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","useState","chart","setChart","onClick","current","type","series","name","map","price","close","options","mode","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","x","time_open","high","low","open","PricesContainer","div","PriceCardTitle","span","PriceCard","Price","tickersData","quotes","USD","percent_change_12h","percent_change_24h","percent_change_7d","percent_change_1y","Title","h1","Loader","Container","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","ThemeBtn","BackBtn","Coin","setDarkAtom","useSetRecoilState","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickersLoading","loading","Helmet","prev","to","rank","symbol","description","total_supply","max_supply","path","CoinsList","ul","li","Img","img","Coins","slice","coin","pathname","id","src","Router","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.9b678b58.chunk.js","sourcesContent":["import { DefaultTheme } from \"styled-components\";\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"#c8d6e5\",\n  textColor: \"#FFFFFF\",\n  accentColor: \"#5100AA\",\n  cardBgColor: \"#6200EE\",\n  borderColor: \"1px solid #EAEAEA\",\n};\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#1F1E22\",\n  textColor: \"#FFFFFF\",\n  accentColor: \"#AA86AA\",\n  cardBgColor: \"#BB86FC\",\n  borderColor: \"1px solid #2C2D33\",\n};\n","import { atom } from \"recoil\";\n\nexport const isDarkAtom = atom({ key: \"isDark\", default: false });\n\nexport default isDarkAtom;\n","const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { useQuery } from \"react-query\";\nimport { useState } from \"react\";\nimport { fetchCoinHistory } from \"../api\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\nimport ApexChart from \"react-apexcharts\";\nimport styled from \"styled-components\";\n\nconst ChartBtn = styled.button`\n  background-color: ${(props) => props.theme.bgColor};\n  border: ${(props) => props.theme.borderColor};\n  font-size: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 96px;\n  height: 48px;\n  border-radius: 30px;\n  cursor: pointer;\n`;\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n}\nexport const Chart = ({ coinId }: ChartProps) => {\n  const isDark = useRecoilValue(isDarkAtom);\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  const [chart, setChart] = useState(true);\n\n  const setChartType = () => {\n    setChart((current) => !current);\n  };\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <>\n          <ChartBtn onClick={setChartType}>{chart ? \"📈\" : \"📊\"}</ChartBtn>\n\n          {chart ? (\n            <ApexChart\n              type=\"line\"\n              series={[\n                {\n                  name: \"Price\",\n                  data: data?.map((price) => price.close),\n                },\n              ]}\n              options={{\n                theme: {\n                  mode: isDark ? \"dark\" : \"light\",\n                },\n                chart: {\n                  height: 300,\n                  width: 500,\n                  toolbar: {\n                    show: false,\n                  },\n                  background: \"transparent\",\n                },\n                grid: { show: false },\n                stroke: {\n                  curve: \"smooth\",\n                  width: 4,\n                },\n                yaxis: {\n                  show: false,\n                },\n                xaxis: {\n                  axisBorder: { show: false },\n                  axisTicks: { show: false },\n                  labels: { show: false },\n                  type: \"datetime\",\n                  categories: data?.map((price) => price.time_close),\n                },\n                fill: {\n                  type: \"gradient\",\n                  gradient: {\n                    gradientToColors: [\"#0be881\"],\n                    stops: [0, 100],\n                  },\n                },\n                colors: [\"#0fbcf9\"],\n                tooltip: {\n                  y: {\n                    formatter: (value) => `$${value.toFixed(2)}`,\n                  },\n                },\n              }}\n            />\n          ) : (\n            <ApexChart\n              type=\"candlestick\"\n              series={[\n                {\n                  name: \"price\",\n                  data: data?.map((price) => {\n                    return {\n                      x: price.time_open,\n                      y: [price.close, price.high, price.low, price.open],\n                    };\n                  }),\n                },\n              ]}\n              options={{\n                theme: {\n                  mode: \"light\",\n                },\n                chart: {\n                  height: 300,\n                  width: 500,\n                  toolbar: {\n                    show: false,\n                  },\n                  background: \"transparent\",\n                },\n                xaxis: {\n                  type: \"datetime\",\n                  axisBorder: { show: false },\n                },\n                yaxis: {\n                  show: false,\n                },\n                grid: {\n                  show: false,\n                },\n              }}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Chart;\n","import { useQuery } from \"react-query\";\nimport { fetchCoinTickers } from \"../api\";\nimport styled from \"styled-components\";\n\nconst PricesContainer = styled.div`\n  display: grid;\n  margin: 10px 0px;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 10px;\n`;\n\nconst PriceCardTitle = styled.span`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${(props) => props.theme.cardBgColor};\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) => props.theme.textColor};\n`;\n\nconst PriceCard = styled.span`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${(props) => props.theme.cardBgColor};\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) => props.theme.textColor};\n`;\n\ninterface PriceProps {\n  coinId: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Price({ coinId }: PriceProps) {\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  return (\n    <div>\n      <PricesContainer>\n        <PriceCardTitle>12Hours</PriceCardTitle>\n        <PriceCard>\n          ${tickersData?.quotes.USD.percent_change_12h.toFixed(3)}\n        </PriceCard>\n      </PricesContainer>\n      <PricesContainer>\n        <PriceCardTitle>24Hours</PriceCardTitle>\n        <PriceCard>\n          ${tickersData?.quotes.USD.percent_change_24h.toFixed(3)}\n        </PriceCard>\n      </PricesContainer>\n      <PricesContainer>\n        <PriceCardTitle>7Days</PriceCardTitle>\n        <PriceCard>\n          ${tickersData?.quotes.USD.percent_change_7d.toFixed(3)}\n        </PriceCard>\n      </PricesContainer>\n      <PricesContainer>\n        <PriceCardTitle>1Years</PriceCardTitle>\n        <PriceCard>\n          ${tickersData?.quotes.USD.percent_change_1y.toFixed(3)}\n        </PriceCard>\n      </PricesContainer>\n    </div>\n  );\n}\n\nexport default Price;\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${(props) => props.theme.cardBgColor};\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${(props) => props.theme.cardBgColor};\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\nconst ThemeBtn = styled.button`\n  all: unset;\n  position: absolute;\n  top: 50px;\n  right: 50px;\n  background-color: ${(props) => props.theme.bgColor};\n  border: ${(props) => props.theme.borderColor};\n  font-size: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 96px;\n  height: 48px;\n  border-radius: 30px;\n  cursor: pointer;\n`;\n\nconst BackBtn = styled.button`\n  position: fixed;\n  z-index: 999999;\n  top: 50px;\n  left: 50px;\n\n  background-color: ${(props) => props.theme.bgColor};\n  border: ${(props) => props.theme.borderColor};\n  font-size: 20px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 96px;\n  height: 48px;\n  border-radius: 30px;\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface ICoinProps {}\n\nfunction Coin({}: ICoinProps) {\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\n  const isDark = useRecoilValue(isDarkAtom);\n  const toogleDarkAtom = () => setDarkAtom((prev) => !prev);\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n        <ThemeBtn onClick={toogleDarkAtom}>{isDark ? \"🌚\" : \"🌞\"}</ThemeBtn>\n        <Link to={\"/\"}>\n          <BackBtn>👈</BackBtn>\n        </Link>{\" \"}\n      </Header>\n\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price coinId={coinId} />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`;\n\nconst ThemeBtn = styled.button`\n  all: unset;\n  position: absolute;\n  top: 50px;\n  right: 50px;\n  background-color: ${(props) => props.theme.bgColor};\n  border: ${(props) => props.theme.borderColor};\n  font-size: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 96px;\n  height: 48px;\n  border-radius: 30px;\n  cursor: pointer;\n`;\n\nconst CoinsList = styled.ul``;\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.cardBgColor};\n  color: ${(props) => props.theme.textColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\ninterface ICoinsProps {}\n\nfunction Coins({}: ICoinsProps) {\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\n  const isDark = useRecoilValue(isDarkAtom);\n  const toogleDarkAtom = () => setDarkAtom((prev) => !prev);\n  const { isLoading, data } = useQuery<ICoin[]>(\"allcoins\", fetchCoins);\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      <ThemeBtn onClick={toogleDarkAtom}>{isDark ? \"🌚\" : \"🌞\"}</ThemeBtn>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptocurrencyliveprices.com/img/${coin.id}.png`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\ninterface IRouterProps {\n}\n\nfunction Router({ }: IRouterProps) {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport Router from \"./Router\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}